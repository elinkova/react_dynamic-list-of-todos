{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onTodoSelect","selectedTodo","className","map","todo","id","completed","classNames","title","onClick","type","TodoFilter","onFilterTodo","useState","query","setQuery","filteredTodos","setFilteredTodos","useEffect","filter","toLowerCase","includes","onChange","e","value","handleFilter","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onClose","user","setUser","userId","href","email","name","App","initialTodos","setInitialTodos","setTodos","setSelectedTodo","isLoaded","setIsLoaded","todosfromServer","handleSelectedTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccda3c0b.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onTodoSelect: (todo: Todo | null) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onTodoSelect,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        return (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger',\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                onClick={() => {\n                  onTodoSelect(todo);\n                }}\n                type=\"button\"\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    selectedTodo\n                      && (selectedTodo.id === todo.id)\n                      ? 'fa-eye-slash'\n                      : 'fa-eye',\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  onFilterTodo: (todos:Todo[]) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({ todos, onFilterTodo }) => {\n  const [query, setQuery] = useState('');\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>(todos);\n\n  useEffect(() => {\n    onFilterTodo(filteredTodos\n      .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase())));\n  }, [query, filteredTodos]);\n\n  const handleFilter = (value: string) => {\n    switch (value) {\n      case 'all':\n        setFilteredTodos(todos);\n        break;\n\n      case 'active':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => {\n              handleFilter(e.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => {\n            setQuery(e.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  selectedTodo: Todo;\n  onClose: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {selectedTodo.id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={onClose}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {selectedTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {selectedTodo.completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [initialTodos, setInitialTodos] = useState<Todo[]>([]);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosfromServer => {\n        setInitialTodos(todosfromServer);\n        setTodos(todosfromServer);\n        setIsLoaded(true);\n      });\n  }, []);\n\n  const handleSelectedTodo = (todo: Todo | null) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            {!isLoaded\n              ? <Loader />\n              : (\n                <>\n                  <div className=\"block\">\n                    <TodoFilter\n                      todos={initialTodos}\n                      onFilterTodo={setTodos}\n                    />\n                  </div>\n\n                  <div className=\"block\">\n                    <TodoList\n                      todos={todos}\n                      selectedTodo={selectedTodo}\n                      onTodoSelect={(todo) => {\n                        handleSelectedTodo(todo);\n                      }}\n                    />\n                  </div>\n                </>\n              )}\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onClose={() => {\n            setSelectedTodo(null);\n          }}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}